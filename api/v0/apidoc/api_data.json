[  {    "type": "post",    "url": "/auth/check_user",    "title": "Check User",    "version": "0.0.1",    "name": "CheckUser",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Checks if user exists with email or social account ID and then returns true if client can go ahead with registration ie. no user conflict. Returns false otherwise</p>",    "parameter": {      "fields": {        "Social": [          {            "group": "Social",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email address</p>"          },          {            "group": "Social",            "type": "String",            "allowedValues": [              "\"facebook\"",              "\"twitter\"",              "\"linkedin\""            ],            "optional": false,            "field": "socialType",            "description": "<p>Social media type</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "socialID",            "description": "<p>Unique ID of user with social account</p>"          }        ]      },      "examples": [        {          "title": "Request-Example (Email):",          "content": "{\n    \"email\": \"kofirook@myrookery.com\",\n    \"socialType\": \"facebook\",\n    \"socialID\": \"Social ID\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "defaultValue": "true",            "description": "<p>Shows if request was successful or not</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorMessage",            "description": "<p>Contains the error message generated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorCode",            "description": "<p>Programmable defined error messages</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>List of Request Output for User</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n{\n     \"success\": true,\n     \"errorMessage\": null,\n     \"errorCode\": null,\n     \"result\": null\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "USER_EXIST",            "description": "<p>User already exists and cannot create with email or social media account given</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "MISSING_PARAMETERS",            "description": "<p>Missing one or two parameters in request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response (Example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"success\": false,\n  \"errorMessage\": \"Missing some parameters in request\",\n  \"errorCode\": \"MISSING_PARAMETERS\",\n  \"result\": null\n}",          "type": "json"        }      ]    },    "filename": "/Users/delmwinbaeka/Documents/RookPlusWeb/api/v0/auth/check_user.php",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/auth/login",    "title": "Login",    "version": "0.0.1",    "name": "LoginEmail",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Handles login via email address and password or via social account and returns an encrypted jwt to the client. The jwt contains the client apid used to request additional information anytime an api request outside the Auth group is made to the server</p>",    "parameter": {      "fields": {        "Email": [          {            "group": "Email",            "type": "String",            "allowedValues": [              "\"email\""            ],            "optional": false,            "field": "type",            "description": ""          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email address</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "firebaseToken",            "description": "<p>Firebase token generated by client</p>"          }        ],        "Social": [          {            "group": "Social",            "type": "String",            "allowedValues": [              "\"social\""            ],            "optional": false,            "field": "type",            "description": ""          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Social Media ID. e.g Facebook ID provided after authentication</p>"          },          {            "group": "Social",            "type": "String",            "allowedValues": [              "\"facebook\"",              "\"twitter\"",              "\"linkedin\""            ],            "optional": false,            "field": "socialType",            "description": "<p>Social Media Type</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "firebaseToken",            "description": "<p>Firebase token generated by client</p>"          }        ]      },      "examples": [        {          "title": "Request-Example (Email):",          "content": "{\n    \"type\": \"email\",\n    \"email\": \"kofirook@myrookery.com\",\n    \"password\": \"password\",\n    \"firebaseToken\": \"firebaseTokenHere\"\n}",          "type": "json"        },        {          "title": "Request-Example (Social):",          "content": "{\n    \"type\": \"social\",\n    \"id\": \"Social Media ID here\",\n    \"socialType\": \"facebook\",\n    \"firebaseToken\": \"firebaseTokenHere\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "defaultValue": "true",            "description": "<p>Shows if request was successful or not</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorMessage",            "description": "<p>Contains the error message generated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorCode",            "description": "<p>Programmable defined error messages</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>List of Request Output for User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.jwt",            "description": "<p>The JSON Web Token for the user</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result.user",            "description": "<p>Contains list of user information</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.email",            "description": "<p>Email address of user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.firebaseToken",            "description": "<p>Firebase Token returned to user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n{\n     \"success\": true,\n     \"errorMessage\": null,\n     \"errorCode\": null,\n     \"result\": {\n                 \"jwt\": \"generated JWT\",\n                 \"user\": {\n                             \"email\": \"kofirook@myrookery.com\",\n                             \"firebaseToken\": \"firebaseTokenHere\"\n                         }\n                }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "USER_AUTHENTICATION_ERROR",            "description": "<p>Invalid login details or user does not exist</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "INVALID_REQUEST",            "description": "<p>Wrong request made to API endpoint</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "MISSING_PARAMETERS",            "description": "<p>Missing one or two parameters in request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response (Example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"success\": false,\n  \"errorMessage\": \"Missing some parameters in request\",\n  \"errorCode\": \"MISSING_PARAMETERS\",\n  \"result\": null\n}",          "type": "json"        }      ]    },    "filename": "/Users/delmwinbaeka/Documents/RookPlusWeb/api/v0/auth/login.php",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/auth/register",    "title": "Register(Email)",    "version": "0.0.1",    "name": "RegisterEmail",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Handles registration via email address and password and requires usual sign up process and returns an encrypted jwt to the client. The jwt contains the client apid used to request additional information anytime an api request outside the Auth group is made to the server</p>",    "parameter": {      "fields": {        "Email": [          {            "group": "Email",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email address</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "firebaseToken",            "description": "<p>Firebase token generated by client</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "firstname",            "description": "<p>User's firstname</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "lastname",            "description": "<p>User's lastname</p>"          },          {            "group": "Email",            "type": "String",            "allowedValues": [              "\"m\"",              "\"f\""            ],            "optional": false,            "field": "gender",            "description": "<p>User's gender</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "dateOfBirth",            "description": "<p>User's date of birth. Format: dd MM yyyy eg. 20 February 1997</p>"          },          {            "group": "Email",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>User's phone number. Format: 233NNNNNNNNN eg. 233501234567</p>"          }        ]      },      "examples": [        {          "title": "Request-Example (Email):",          "content": " {\n     \"email\": \"kofirook@myrookery.com\",\n     \"password\": \"password\",\n     \"firebaseToken\": \"firebaseTokenHere\",\n     \"firstname\": \"Kofi\",\n     \"lastname\": \"Rook\",\n     \"gender\": \"m\",\n     \"dateOfBirth\": \"20 Februaru 1997\",\n     \"phone\": \"233501234567\"\n }\n*",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "defaultValue": "true",            "description": "<p>Shows if request was successful or not</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorMessage",            "description": "<p>Contains the error message generated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorCode",            "description": "<p>Programmable defined error messages</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>List of Request Output for User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.jwt",            "description": "<p>The JSON Web Token for the user</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result.user",            "description": "<p>Contains list of user information</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.email",            "description": "<p>Email address of user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.firebaseToken",            "description": "<p>Firebase Token returned to user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.firstname",            "description": "<p>First name of user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.lastname",            "description": "<p>Last name of user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n{\n     \"success\": true,\n     \"errorMessage\": null,\n     \"errorCode\": null,\n     \"result\": {\n                 \"jwt\": \"generated JWT\",\n                 \"user\": {\n                             \"email\": \"kofirook@myrookery.com\",\n                             \"firstname\": \"Kofi\",\n                             \"lastname\": \"Rook\",\n                             \"firebaseToken\": \"firebaseTokenHere\"\n                         }\n                }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "USER_CREATION_ERROR",            "description": "<p>User exists or could not be created</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "MISSING_PARAMETERS",            "description": "<p>Missing one or two parameters in request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response (Example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"success\": false,\n  \"errorMessage\": \"Missing some parameters in request\",\n  \"errorCode\": \"MISSING_PARAMETERS\",\n  \"result\": null\n}",          "type": "json"        }      ]    },    "filename": "/Users/delmwinbaeka/Documents/RookPlusWeb/api/v0/auth/register.php",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/auth/social_register",    "title": "Register(Social)",    "version": "0.0.1",    "name": "SocialEmail",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Handles registration via social media but requires using the check_user endpoint to first check if user exists with social account already. Returns an encrypted jwt to the client on success of creation. The jwt contains the client apid used to request additional information anytime an api request outside the Auth group is made to the server</p>",    "parameter": {      "fields": {        "Social": [          {            "group": "Social",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email address</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "socialToken",            "description": "<p>Social media auth token</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "firebaseToken",            "description": "<p>Firebase token generated by client</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "firstname",            "description": "<p>User's firstname</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "lastname",            "description": "<p>User's lastname</p>"          },          {            "group": "Social",            "type": "String",            "allowedValues": [              "\"facebook\"",              "\"twitter\"",              "\"linkedin\""            ],            "optional": false,            "field": "socialType",            "description": "<p>Social media type</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "socialID",            "description": "<p>Unique ID of user with social account</p>"          },          {            "group": "Social",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>User's phone number. Format: 233NNNNNNNNN eg. 233501234567</p>"          }        ]      },      "examples": [        {          "title": "Request-Example (Email):",          "content": " {\n     \"email\": \"kofirook@myrookery.com\",\n     \"socialToken\": \"Token here\",\n     \"firebaseToken\": \"firebaseTokenHere\",\n     \"firstname\": \"Kofi\",\n     \"lastname\": \"Rook\",\n     \"socialType\": \"facebook\",\n     \"socialID\": \"Social ID\",\n     \"phone\": \"233501234567\"\n }\n*",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "defaultValue": "true",            "description": "<p>Shows if request was successful or not</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorMessage",            "description": "<p>Contains the error message generated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "errorCode",            "description": "<p>Programmable defined error messages</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result",            "description": "<p>List of Request Output for User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.jwt",            "description": "<p>The JSON Web Token for the user</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "result.user",            "description": "<p>Contains list of user information</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.email",            "description": "<p>Email address of user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.firebaseToken",            "description": "<p>Firebase Token returned to user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.firstname",            "description": "<p>First name of user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "result.user.lastname",            "description": "<p>Last name of user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n{\n     \"success\": true,\n     \"errorMessage\": null,\n     \"errorCode\": null,\n     \"result\": {\n                 \"jwt\": \"generated JWT\",\n                 \"user\": {\n                             \"email\": \"kofirook@myrookery.com\",\n                             \"firstname\": \"Kofi\",\n                             \"lastname\": \"Rook\",\n                             \"firebaseToken\": \"firebaseTokenHere\"\n                         }\n                }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "USER_CREATION_ERROR",            "description": "<p>User exists or could not be created</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "MISSING_PARAMETERS",            "description": "<p>Missing one or two parameters in request</p>"          }        ]      },      "examples": [        {          "title": "Error-Response (Example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"success\": false,\n  \"errorMessage\": \"Missing some parameters in request\",\n  \"errorCode\": \"MISSING_PARAMETERS\",\n  \"result\": null\n}",          "type": "json"        }      ]    },    "filename": "/Users/delmwinbaeka/Documents/RookPlusWeb/api/v0/auth/social_register.php",    "groupTitle": "Auth"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "/Users/delmwinbaeka/Documents/RookPlusWeb/api/v0/apidoc/main.js",    "group": "_Users_delmwinbaeka_Documents_RookPlusWeb_api_v0_apidoc_main_js",    "groupTitle": "_Users_delmwinbaeka_Documents_RookPlusWeb_api_v0_apidoc_main_js",    "name": ""  }]
